// Рассматриваемые темы:
// Глобальные переменные

#pragma once

#include <iostream>
using namespace std;

namespace GlobalVariables
{
   // Глобальная переменная видна и доступна для использования
   // в любом месте модуля программы.
   // Если вы не знакомы с понятием модуля, то считайте, что это
   // файл, внутри которого вы пишете код. Например, main.cpp

    int tmp = 5; // tmp - глобальная переменная

    void Func()
    {
        tmp = 0;
        // Не смотря на то, что в этой функции не было объявлено переменной tmp,
        // но есть глобальная переменная tmp, которая и задействовалась в строчке выше
    }

    void main()
    {
        tmp = tmp + 100;
        Func();
        cout << tmp << endl; // Выведется 0

       // Глобальные переменные плохи по двум причинам:
       // 1. Они хранятся в памяти на протяжение всей программы
       // и если глобальные переменные занимаются большой объем памяти
       // (например, статические массивы или большие объекты),
       // это увеличивает занимаемый программой объем оперативной памяти
       // 
       // 2. Снижение читабельности кода программы
       // В примере выше мы никак не могли предположить, что
       // переменная tmp, которая по идее должна была бы быть равно 105 (5 + 100),
       // обнулится в ф-ции Func. Из-за того, что глобальная переменная может быть
       // изменена в любом месте модуля, это повышает вероятность случайной ошибки,
       // что переменная будет изменена, хотя не должна была бы быть
       // 
       // По правилам хорошего тона нужно избегать использовать глобальные переменные,
       // кроме случаев, где по архитектуре программы без этого не обойтись
    }
}